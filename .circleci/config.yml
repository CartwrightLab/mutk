version: 2.0
jobs:
  build:
    docker:
      - image: gcc:7
    steps:
      - checkout
      - run:
          name: Updating Packages
          command: 'apt-get update'
      - run:
          name: Installing CMAKE
          command: 'apt-get install -y cmake'
      - run:
          name: Creating Build Files
          command: 'cmake -S. -Bbuild/circleci -DDEVOPT_EXCLUDE_PRETEST_FROM_ALL=On'
      - run:
          name: Building ALL
          command: 'cmake --build build/circleci -j 2'
  test:
    docker:
      - image: gcc:7
    steps:
      - checkout
      - run:
          name: Updating Packages
          command: 'apt-get update'
      - run:
          name: Installing CMAKE
          command: 'apt-get install -y cmake'
      - run:
          name: Creating Build Files
          command: 'cmake -S . -B build/circleci -DCMAKE_BUILD_TYPE=Debug -DDEVOPT_ENABLE_COVERAGE_REPORT=On'
      - run:
          name: Building Pretest
          command: 'cmake --build build/circleci --target pretest -j 2'
      - run:
          name: Running Tests
          command: 'cd build/circleci && ctest -j 2 --output-on-failure'
      - run:
          name: Uploading Code Coverage
          command: 'cmake --build build/circleci --target upload_codecov'
  check_format:
    docker:
      - image: gcc:7
    steps:
      - checkout
      - run:
          name: Updating Packages
          command: 'apt-get update'
      - run:
          name: Installing CMAKE
          command: 'apt-get install -y cmake'
      - run:
          name: Installing CLANG-FORMAT
          command: 'apt-get install -y clang-format'
      - run:
          name: Creating Build Files
          command: 'cmake -S. -Bbuild/circleci'
      - run:
          name: Checking Format
          command: 'cmake --build build/circleci --target check_format -j 2'
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - check_format
